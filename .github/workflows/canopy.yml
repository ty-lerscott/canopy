name: canopy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      BLUR: ${{ secrets.BLUR }}
      PORT: ${{ secrets.PORT }}
      API_KEY: ${{ secrets.API_KEY }}
      APP_ENV: ${{ secrets.APP_ENV }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      SENTRY_URL: ${{ secrets.SENTRY_URL }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm i
      - name: Check for changes
        id: check_for_changes
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..HEAD)
          echo "API_DIR_CHANGED=$(echo "$CHANGED_FILES" | grep -q "^src/api" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "TOOLS_DIR_CHANGED=$(echo "$CHANGED_FILES" | grep -q "^src/tools" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "UTILS_DIR_CHANGED=$(echo "$CHANGED_FILES" | grep -q "^src/utils" && echo "true" || echo "false")" >> $GITHUB_OUTPUT
          echo "APPS_DIR_CHANGED=$(echo "$CHANGED_FILES" | grep -q "^src/apps" && echo "true" || echo "false")" >> $GITHUB_OUTPUT

      - name: Build API
        if: |
          steps.check_for_changes.outputs.API_DIR_CHANGED == 'true' ||
          steps.check_for_changes.outputs.TOOLS_DIR_CHANGED == 'true' ||
          steps.check_for_changes.outputs.UTILS_DIR_CHANGED == 'true'
        run: |
          npm run build:ts

      - name: Build Apps
        if: |
          steps.check_for_changes.outputs.API_DIR_CHANGED == 'true' ||
          steps.check_for_changes.outputs.TOOLS_DIR_CHANGED == 'true' ||
          steps.check_for_changes.outputs.UTILS_DIR_CHANGED == 'true'
        run: |
          npm run build:apps

      - name: Bundle files for transfer
        run: |
          tar -czf ${{ secrets.BUNDLE_NAME }} src public node_modules package.json next.config.mjs postcss.config.mjs tailwind.config.ts tsconfig.json tsup.config.ts sentry.mjs;

      - name: SCP file transfer
        uses: nogsantos/scp-deploy@master
        with:
          src: ${{ secrets.BUNDLE_NAME }}
          host: ${{ secrets.HOST }}
          remote: ${{ secrets.TARGET_DIR }}
          port: 22
          user: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}

      - name: Unpack Bundle
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd ${{ secrets.TARGET_DIR }};
            tar -xzf ${{ secrets.BUNDLE_NAME }};
            rm ${{ secrets.BUNDLE_NAME }};
            pm2 restart canopy