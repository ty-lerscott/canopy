{"version":3,"sources":["api/image/utils/blur.ts"],"sourcesContent":["import { logger } from \"@/api/logger\";\nimport codes from \"@/api/utils/status-codes\";\nimport type { GetResponse } from \"@/types\";\nimport getImage from \"./get-image\";\n\nconst blur = async (url: string) => {\n\tconst responseBody: GetResponse<Buffer> = { status: codes.OK };\n\n\tif (!url) {\n\t\tconsole.log(\"Missing URL\");\n\t\tresponseBody.status = codes.BAD_REQUEST;\n\t\tresponseBody.error = \"Bad Request: url parameter is required\";\n\n\t\treturn Promise.resolve(responseBody);\n\t}\n\n\ttry {\n\t\tconst { data } = await getImage(url);\n\n\t\tresponseBody.data = data;\n\t\tresponseBody.headers = {\n\t\t\t\"Content-Type\": \"image/png\",\n\t\t\t\"Content-Length\": data?.length.toString() || \"\",\n\t\t};\n\t\tresponseBody.status = codes.OK;\n\t} catch (error) {\n\t\tlogger.error(\"Error blurring image:\", error);\n\n\t\tresponseBody.status = codes.SERVER_ERROR;\n\t\tresponseBody.error = (error as Error).message;\n\t}\n\n\treturn responseBody;\n};\n\nexport default blur;\n"],"mappings":"mHAKA,IAAMA,EAAO,MAAOC,GAAgB,CACnC,IAAMC,EAAoC,CAAE,OAAQC,EAAM,EAAG,EAE7D,GAAI,CAACF,EACJ,eAAQ,IAAI,aAAa,EACzBC,EAAa,OAASC,EAAM,YAC5BD,EAAa,MAAQ,yCAEd,QAAQ,QAAQA,CAAY,EAGpC,GAAI,CACH,GAAM,CAAE,KAAAE,CAAK,EAAI,MAAMC,EAASJ,CAAG,EAEnCC,EAAa,KAAOE,EACpBF,EAAa,QAAU,CACtB,eAAgB,YAChB,iBAAkBE,GAAM,OAAO,SAAS,GAAK,EAC9C,EACAF,EAAa,OAASC,EAAM,EAC7B,OAASG,EAAO,CACfC,EAAO,MAAM,wBAAyBD,CAAK,EAE3CJ,EAAa,OAASC,EAAM,aAC5BD,EAAa,MAASI,EAAgB,OACvC,CAEA,OAAOJ,CACR,EAEOM,EAAQR","names":["blur","url","responseBody","status_codes_default","data","get_image_default","error","logger","blur_default"]}