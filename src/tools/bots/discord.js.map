{"version":3,"sources":["discord.ts"],"sourcesContent":["import env from \"@/tools/dotenv-config.mjs\";\nimport type { Level, Message } from \"@/types/bots\";\nimport { program } from \"commander\";\nimport merge from \"deepmerge\";\nimport { MessageBuilder, Webhook } from \"discord-webhook-node\";\nimport omit from \"object.omit\";\n\nconst LEVEL = {\n\tinfo: \"#1982c4\",\n\tnotice: \"#6a4c93\",\n\tsuccess: \"#8ac926\",\n\twarning: \"#ffca3a\",\n\tcritical: \"#ff595e\",\n} as Record<Level, string>;\n\nconst DEFAULT_MESSAGE = {\n\tlevel: \"info\",\n} as Message;\nconst hook = new Webhook(env.DISCORD_WEBHOOK_URL as string);\n\nconst sendMessage = async (message: Message) => {\n\tconst { url, author, fields, title, image, footer, description, level } =\n\t\tmerge<Message>(DEFAULT_MESSAGE, message);\n\n\tlet embed = new MessageBuilder()\n\t\t.setTimestamp()\n\t\t.setColor(LEVEL[level as Level] as unknown as number);\n\n\tif (author) {\n\t\tembed.setAuthor(author.name, author.avatar, author.url);\n\t}\n\n\tif (title) {\n\t\tembed = embed.setTitle(title);\n\t}\n\n\tif (description) {\n\t\tembed = embed.setDescription(description);\n\t}\n\n\tif (url) {\n\t\t// @ts-ignore\n\t\tembed = embed.setURL(url);\n\t}\n\n\tif (Array.isArray(fields) && fields.length) {\n\t\tfor (const field of fields) {\n\t\t\tembed = embed.addField(field.name, field.value, field.isInline);\n\t\t}\n\t}\n\n\tif (image) {\n\t\tembed = embed.setImage(image);\n\t}\n\n\tif (footer) {\n\t\tembed = embed.setFooter(footer.value, footer.image);\n\t}\n\n\treturn hook.send(embed);\n};\nconst separate = (str: string) => str.split(\"%\");\nconst collect = (value: string, arr: string[]): string[] => arr.concat([value]);\n\nconst Program = () => {\n\tprogram\n\t\t.option(\"-u, --url, <string>\")\n\t\t.option(\"-dry, --dry-run\")\n\t\t.option(\"--author.url, <string>\")\n\t\t.option(\"--author.name, <string>\")\n\t\t.option(\"--author.avatar, <string>\")\n\t\t.option(\"-l, --level, <string>\")\n\t\t.option(\"-t, --title, <string>\")\n\t\t.option(\"-i, --image, <string>\")\n\t\t.option(\"-d, --description, <string>\")\n\t\t.option(\"--footer.value, <string>\")\n\t\t.option(\"--footer.image, <string>\")\n\t\t.option(\n\t\t\t\"-f, --field, <string>%<string>%<string>\",\n\t\t\t\"Collect Args\",\n\t\t\tcollect,\n\t\t\t[],\n\t\t)\n\t\t.action(\n\t\t\tasync ({\n\t\t\t\tfield,\n\t\t\t\tdryRun,\n\t\t\t\t...props\n\t\t\t}: {\n\t\t\t\tfield?: string;\n\t\t\t\tfooter?: string;\n\t\t\t\tdryRun?: boolean;\n\t\t\t\tprops: Record<string, string>;\n\t\t\t}) => {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst flags = omit(props, [\n\t\t\t\t\t\"author.name\",\n\t\t\t\t\t\"author.avatar\",\n\t\t\t\t\t\"author.url\",\n\t\t\t\t\t\"footer.value\",\n\t\t\t\t\t\"footer.image\",\n\t\t\t\t]);\n\t\t\t\tconst fields = Array.isArray(field)\n\t\t\t\t\t? field.map((item) => {\n\t\t\t\t\t\t\tconst [name, value, isInline] = separate(item);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\tisInline: Boolean(isInline),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t: undefined;\n\n\t\t\t\tconst authorName = (props as unknown as Record<\"author.name\", string>)[\n\t\t\t\t\t\"author.name\"\n\t\t\t\t];\n\t\t\t\tconst authorAvatar = (\n\t\t\t\t\tprops as unknown as Record<\"author.avatar\", string>\n\t\t\t\t)[\"author.avatar\"];\n\t\t\t\tconst authorUrl = (props as unknown as Record<\"author.url\", string>)[\n\t\t\t\t\t\"author.url\"\n\t\t\t\t];\n\n\t\t\t\tconst author = authorName\n\t\t\t\t\t? {\n\t\t\t\t\t\t\turl: authorUrl,\n\t\t\t\t\t\t\tname: authorName,\n\t\t\t\t\t\t\tavatar: authorAvatar,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined;\n\n\t\t\t\tconst footerValue = (\n\t\t\t\t\tprops as unknown as Record<\"footer.value\", string>\n\t\t\t\t)[\"footer.value\"];\n\t\t\t\tconst footerImage = (\n\t\t\t\t\tprops as unknown as Record<\"footer.image\", string>\n\t\t\t\t)[\"footer.image\"];\n\n\t\t\t\tconst footer = footerValue\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tvalue: footerValue,\n\t\t\t\t\t\t\timage: footerImage,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined;\n\n\t\t\t\tconst message = merge<Message>(DEFAULT_MESSAGE, {\n\t\t\t\t\t...flags,\n\t\t\t\t\tfields,\n\t\t\t\t\t...(author && { author }),\n\t\t\t\t\t...(footer && { footer }),\n\t\t\t\t});\n\n\t\t\t\tif (dryRun) {\n\t\t\t\t\tconsole.log(message);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.dir({ message }, { depth: null });\n\t\t\t\t\tawait sendMessage(message);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\tprogram.parse();\n};\n\n(() => {\n\tProgram();\n})();\n"],"mappings":"4CAEA,OAAS,WAAAA,MAAe,YACxB,OAAOC,MAAW,YAClB,OAAS,kBAAAC,EAAgB,WAAAC,MAAe,uBACxC,OAAOC,MAAU,cAEjB,IAAMC,EAAQ,CACb,KAAM,UACN,OAAQ,UACR,QAAS,UACT,QAAS,UACT,SAAU,SACX,EAEMC,EAAkB,CACvB,MAAO,MACR,EACMC,EAAO,IAAIJ,EAAQK,EAAI,mBAA6B,EAEpDC,EAAc,MAAOC,GAAqB,CAC/C,GAAM,CAAE,IAAAC,EAAK,OAAAC,EAAQ,OAAAC,EAAQ,MAAAC,EAAO,MAAAC,EAAO,OAAAC,EAAQ,YAAAC,EAAa,MAAAC,CAAM,EACrEjB,EAAeK,EAAiBI,CAAO,EAEpCS,EAAQ,IAAIjB,EAAe,EAC7B,aAAa,EACb,SAASG,EAAMa,CAAc,CAAsB,EAmBrD,GAjBIN,GACHO,EAAM,UAAUP,EAAO,KAAMA,EAAO,OAAQA,EAAO,GAAG,EAGnDE,IACHK,EAAQA,EAAM,SAASL,CAAK,GAGzBG,IACHE,EAAQA,EAAM,eAAeF,CAAW,GAGrCN,IAEHQ,EAAQA,EAAM,OAAOR,CAAG,GAGrB,MAAM,QAAQE,CAAM,GAAKA,EAAO,OACnC,QAAWO,KAASP,EACnBM,EAAQA,EAAM,SAASC,EAAM,KAAMA,EAAM,MAAOA,EAAM,QAAQ,EAIhE,OAAIL,IACHI,EAAQA,EAAM,SAASJ,CAAK,GAGzBC,IACHG,EAAQA,EAAM,UAAUH,EAAO,MAAOA,EAAO,KAAK,GAG5CT,EAAK,KAAKY,CAAK,CACvB,EACME,EAAYC,GAAgBA,EAAI,MAAM,GAAG,EACzCC,EAAU,CAACC,EAAeC,IAA4BA,EAAI,OAAO,CAACD,CAAK,CAAC,EAExEE,EAAU,IAAM,CACrB1B,EACE,OAAO,qBAAqB,EAC5B,OAAO,iBAAiB,EACxB,OAAO,wBAAwB,EAC/B,OAAO,yBAAyB,EAChC,OAAO,2BAA2B,EAClC,OAAO,uBAAuB,EAC9B,OAAO,uBAAuB,EAC9B,OAAO,uBAAuB,EAC9B,OAAO,6BAA6B,EACpC,OAAO,0BAA0B,EACjC,OAAO,0BAA0B,EACjC,OACA,0CACA,eACAuB,EACA,CAAC,CACF,EACC,OACA,MAAO,CACN,MAAAH,EACA,OAAAO,EACA,GAAGC,CACJ,IAKM,CAEL,IAAMC,EAAQzB,EAAKwB,EAAO,CACzB,cACA,gBACA,aACA,eACA,cACD,CAAC,EACKf,EAAS,MAAM,QAAQO,CAAK,EAC/BA,EAAM,IAAKU,GAAS,CACpB,GAAM,CAACC,EAAMP,EAAOQ,CAAQ,EAAIX,EAASS,CAAI,EAE7C,MAAO,CACN,KAAAC,EACA,MAAAP,EACA,SAAU,EAAQQ,CACnB,CACD,CAAC,EACA,OAEGC,EAAcL,EACnB,aACD,EACMM,EACLN,EACC,eAAe,EACXO,EAAaP,EAClB,YACD,EAEMhB,EAASqB,EACZ,CACA,IAAKE,EACL,KAAMF,EACN,OAAQC,CACT,EACC,OAEGE,EACLR,EACC,cAAc,EACVS,EACLT,EACC,cAAc,EAEVZ,EAASoB,EACZ,CACA,MAAOA,EACP,MAAOC,CACR,EACC,OAEG3B,EAAUT,EAAeK,EAAiB,CAC/C,GAAGuB,EACH,OAAAhB,EACA,GAAID,GAAU,CAAE,OAAAA,CAAO,EACvB,GAAII,GAAU,CAAE,OAAAA,CAAO,CACxB,CAAC,EAEGW,EACH,QAAQ,IAAIjB,CAAO,GAEnB,QAAQ,IAAI,CAAE,QAAAA,CAAQ,EAAG,CAAE,MAAO,IAAK,CAAC,EACxC,MAAMD,EAAYC,CAAO,EAE3B,CACD,EAEDV,EAAQ,MAAM,CACf,EAGC0B,EAAQ","names":["program","merge","MessageBuilder","Webhook","omit","LEVEL","DEFAULT_MESSAGE","hook","dotenv_config_default","sendMessage","message","url","author","fields","title","image","footer","description","level","embed","field","separate","str","collect","value","arr","Program","dryRun","props","flags","item","name","isInline","authorName","authorAvatar","authorUrl","footerValue","footerImage"]}